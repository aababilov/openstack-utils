#!/bin/bash

DIRS="$(ls -d /usr/bin/{keystone,nova,glance}*  \
/etc/{keystone,nova,glance} \
/var/{lib,log,run}/{keystone,nova,glance} \
/usr/lib/python*/site-packages/*{keystone,nova,glance}* \
/etc/init.d/{keystone,glance}* \
/etc/init.d/nova-[^b]* 2>/dev/null)"

INSTALL_OPT=""
NODE_ROLE=cc
RELEASE=essex
DB_SCRIPT_DIR=""

function get_date() {
    date '+%Y.%m.%d-%H.%M'
}

function do_install() {
    COMMON_PKGS="
python-novaclient
python-keystoneclient
openstack-nova-compute
openstack-nova-network
"
    CC_PKGS="
openstack-keystone
openstack-glance
openstack-nova-api
openstack-nova-objectstore
openstack-nova-scheduler
openstack-nova-volume
openstack-nova-consoleauth
"
    for i in "$@"; do
        case "$i" in
            essex|diablo)
                RELEASE="$i"
                ;;
            cc|compute)
                NODE_ROLE="$i"
                ;;
            -y)
                INSTALL_OPT="$i"
                ;;
            *)
                echo "usage: $0 install (essex|diablo) [cc|compute] [-y]"
                exit 1
                ;;
        esac
    done
    if [ "$NODE_ROLE" == cc ]; then
        PKGS="$CC_PKGS $COMMON_PKGS"
    else
        PKGS="$COMMON_PKGS"
    fi
    if [ "$RELEASE" == essex ]; then
        PKGS="$(echo $PKGS |  sed -r 's/([a-z]+-[a-z]+)([-a-z])?/\1-essex\2/g')"
    fi
    PKGS="$PKGS openstack-noVNC nova-networks-ext"
    echo "installing $RELEASE for $NODE_ROLE node"
    set -e
    yum install libvirt mysql-server MySQL-python $INSTALL_OPT
    yum install $PKGS $INSTALL_OPT
}


function do_erase() {
    PKGS="$(rpm -qa '(openstack|python-(glance|nova|keystone))*')"
    if [ -n "$PKGS" ]; then
        yum erase $PKGS "$@"
    fi
}

function _install() {
    # always stop and purge
    openstack-daemons stop
    openstack-pkg erase $INSTALL_OPT
    openstack-etc purge

    set -e
    openstack-pkg install "$RELEASE" $INSTALL_OPT
    openstack-etc setup $ADMIN_PASSWORD

    if [ "$NODE_ROLE" == cc ]; then
        case "$DB_SETTER" in
            migrate)
                openstack-db migrate
                ;;
            populate)
                openstack-db populate "$DB_SCRIPT_DIR"
                ;;
            sync)
                openstack-db sync
                ;;
        esac
        openstack-etc keystone_db
    fi
}

function do_install_full() {
    DB_SETTER="sync"
    ADMIN_PASSWORD=
    for i in "$@"; do
        case "$i" in
            essex|diablo)
                RELEASE="$i"
                ;;
            cc|compute)
                NODE_ROLE="$i"
                ;;
            -y)
                INSTALL_OPT="$i"
                ;;
            --help|-h|help)
                echo "usage: $0 install_full (essex|diablo) [cc|compute] [-y] [<sql scripts directory>] [admin token or password]"
                exit 0
                ;;
            *)
                if [ -d "$i" ]; then
                    DB_SCRIPT_DIR="$i"
                    DB_SETTER="populate"
                else
                    ADMIN_PASSWORD="$i"
                fi
                ;;
        esac
    done
    _install
}

function do_migrate() {
    RELEASE=essex
    DB_SETTER=migrate
    rpm -qa 'openstack-nova*-api' --quiet && NODE_ROLE=cc || NODE_ROLE=compute
    _install
}

function do_purge() {
    rm -rfv $DIRS
}

function do_dump() {
    tar -cf "${1:-.}/openstack-dump.$(get_date).tar" $DIRS
}

ACTION="$1"

case "$ACTION" in
    install|erase|install_full|migrate|purge|dump)
        shift
        "do_${ACTION}" "$@"
        ;;
    *)
        echo "Usage: $0 (install|erase|install_full|migrate|purge|dump)"
        exit 1
        ;;
esac
